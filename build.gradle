buildscript {
    repositories {
		maven {
			name = "forge"
			url = "https://maven.minecraftforge.net/"
		}
        maven {
			url = 'https://maven.cleanroommc.com'
		}
		maven {
			url = 'https://repo.spongepowered.org/maven'
		}
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
		if (project.use_mixins.toBoolean()) {
			classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
		}
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

if (project.use_mixins.toBoolean()) {
	apply plugin: 'org.spongepowered.mixin'
}

version = project.mod_version
group = project.maven_group
archivesBaseName = project.archives_base_name

sourceCompatibility = targetCompatibility = '1.8'

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

minecraft {
    version = '1.12.2-14.23.5.2847'
    runDir = 'run'
    mappings = 'stable_39'
	def args = []
	if (project.use_coremod.toBoolean()) {
		args << '-Dfml.coreMods.load=' + coremod_plugin_class_name
	}
	if (project.use_mixins.toBoolean()) {
		args << '-Dmixin.hotSwap=true'
		args << '-Dmixin.debug=true'
	}
	clientJvmArgs.addAll(args)
	serverJvmArgs.addAll(args)
}

repositories {
	maven {
		url = 'https://maven.cleanroommc.com'
	}
    maven {
        url = 'https://repo.spongepowered.org/maven'
    }
	maven {
		name = "CurseForge"
		url = 'https://www.cursemaven.com'
	}
}

dependencies {
	compile 'org.jetbrains:annotations:23.0.0'
	if (project.use_assetmover.toBoolean()) {
		deobfCompile 'com.cleanroommc:assetmover:0.2'
	}
	if (project.use_mixins.toBoolean()) {
		deobfCompile 'zone.rong:mixinbooter:5.0'
    }

	//deobfCompile 'curse.maven:modularui-624243:3873836'
	compile files('etc/modularui-1.0.6.jar') // for testing purpose
	provided 'curse.maven:iron_chests-228756:2747935'
	provided 'curse.maven:thermal_expansion-69163:2926431'
	provided 'curse.maven:actually_additions-228404:3117927'
	provided 'curse.maven:ender_storage_1_8-245174:2755787'
	provided 'curse.maven:ae2_extended_life-570458:3811277'
	provided 'curse.maven:ender_io-64578:3328811'
	provided 'curse.maven:draconic_evolution-223565:3431261'
	provided 'curse.maven:gregtech_ce_unofficial-557242:4325257'
	provided 'curse.maven:future_mc-310059:3842790'
	provided 'curse.maven:tinkers_construct-74072:2902483'
	provided 'curse.maven:projecte-226410:2702991'
	provided 'curse.maven:immersive_engineering-231951:2974106'
	provided 'curse.maven:forestry-59751:2918418'
	provided 'curse.maven:industrial_craft-242638:3838713'
	provided 'curse.maven:metalchests-290145:2751488'
	provided 'curse.maven:travelers_backpack-321117:3150850'
	provided 'curse.maven:colossal_chests-237875:2718588'
	provided 'curse.maven:cyclops_core-232758:3159497'
	provided 'curse.maven:quark-243121:2924091'
	provided 'curse.maven:cyclic-239286:3722420'
	provided 'curse.maven:bibliocraft-228027:3647708'
	provided 'curse.maven:railcraft-51195:2687757'
	provided 'curse.maven:ic2_classic-242942:3093607'
	provided 'curse.maven:energy_control-373450:3829524'
	provided 'curse.maven:mrtjpcore-229002:2735197'
	provided 'curse.maven:project_red_exploration-229049:2745551'
	provided 'curse.maven:betweenlands-243363:3540287'
	provided 'curse.maven:terrafirmacraft-302973:3645502'
	provided 'curse.maven:galacticraft_legacy-564236:3919260'
}

sourceSets {

    main {
        ext.refMap = 'mixins.' + archives_base_name + '.refmap.json'
    }

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
	rename '(.+_at.cfg)', 'META-INF/$1' // Access Transformers
}

jar {
    manifest {
		def attribute_map = [:]
		if (project.use_coremod.toBoolean()) {
			attribute_map['FMLCorePlugin'] = project.coremod_plugin_class_name
			if (project.include_mod.toBoolean()) {
				attribute_map['FMLCorePluginContainsFMLMod'] = true
			}
		}
		if (project.use_mixins.toBoolean()) {
			attribute_map['TweakClass'] = 'org.spongepowered.asm.launch.MixinTweaker'
		}
		// false for dev and true for non dev
		attribute_map['ForceLoadAsMod'] = project.gradle.startParameter.taskNames[0] == "build"
        attributes(attribute_map)
    }
}
